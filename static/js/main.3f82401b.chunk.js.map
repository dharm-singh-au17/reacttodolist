{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","ele","TodoList","filteredTodos","App","useState","status","setFilterTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f82401b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText  ,setStatus}) => {\r\n  const inputTextHandler = (e) => {\r\n    console.log(e.target.value);\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      { text: inputText, completed: false, id: Math.random() * 1000 },\r\n    ]);\r\n\r\n    setInputText(\"\");\r\n  };\r\n  const statusHandler = (e) =>{\r\n    // console.log(e.target.value);\r\n    setStatus(e.target.value)\r\n  }\r\n  return (\r\n    <form>\r\n      <input\r\n        value={inputText}\r\n        onChange={inputTextHandler}\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n      />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n  //Events\r\n\r\n  const deleteEventHandler = () => {\r\n    setTodos(todos.filter((ele) => ele.id !== todo.id));\r\n  };\r\n\r\n  const completeEventHandler = () =>{\r\n      setTodos(todos.map((item) => {\r\n          if(item.id === todo.id){\r\n              return{\r\n                  ...item,completed:!item.completed\r\n              }\r\n\r\n          }\r\n          return item;\r\n      })\r\n      )\r\n\r\n    }\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n\r\n      <button onClick={completeEventHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteEventHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nconst TodoList = ({ todos , setTodos,filteredTodos}) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            setTodos={setTodos}\r\n            todos={todos}\r\n            key={todo.id}\r\n            todo={todo}\r\n            text={todo.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nconst App = () => {\n  // states\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  const [status, setStatus] = useState(\"all\");\n\n  const [filteredTodos, setFilterTodos] = useState([]);\n  //Run once  when the app starts\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  //useEffect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n  // Functions\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilterTodos(todos.filter((todo) => todo.completed === true));\n        break;\n\n      case \"uncompleted\":\n        setFilterTodos(todos.filter((todo) => todo.completed === false));\n        break;\n\n      default:\n        setFilterTodos(todos);\n        break;\n    }\n  };\n\n  // save to local\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") == null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos')) ;\n      setTodos(todoLocal) \n    }\n\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>ToDo List </h1>\n      </header>\n\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        filteredTodos={filteredTodos}\n        setTodos={setTodos}\n        todos={todos}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}